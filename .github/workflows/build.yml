name: Build
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.properties.outputs.version }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4.1.0

      # Set up Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "appVersion:" | cut -f2- -d ' ')"

          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Test
        run: ./gradlew clean testDebug

      - name: Build release
        run: ./gradlew bundleRelease

  # Call Workflow responsible for creating draft releases
  # Exclude release commits, as in this case, the existing draft will be released
  createDraft:
    name: Create Draft
    needs: [build]
    if: github.event_name != 'pull_request' && !startsWith(github.event.head_commit.message, 'Release v')
    uses: ./.github/workflows/create_draft.yml
    permissions:
      contents: write
    with:
      current_version: ${{ needs.build.outputs.version }}

  # Call Workflow responsible for releasing the current draft release
  releaseDraft:
    name: Release Draft
    needs: [build]
    if: github.event_name != 'pull_request' && startsWith(github.event.head_commit.message, 'Release v')
    uses: ./.github/workflows/release.yml
    permissions:
      contents: write